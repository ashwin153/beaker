beaker {

  # Port number. [0, 65535]
  # The TCP/IP port over which the instance is served.
  port = 9090

  # Seed address. ${host}:${port}
  # Optional network location of a "seed" beaker from which the instance is bootstrapped. All
  # members of the cluster except the initial member should be bootstrapped in this manner.
  seed = ""

  # Consensus backoff duration.
  # The amount of time to wait between retries. Larger backoff durations will perform better on
  # workloads in which concurrent operations conflict with greater frequency.
  backoff = 1 second

  # Cache hierarchy. "local", "redis"
  # The sequence of cache implementations in descending order of priority. An implementation may
  # appear at most once; for example, there cannot be two local caches.
  cache = []

  # Database implementation. "local", "sql"
  # The underlying database implementation.
  database = "local"

  caches {

    # Caffeine. https://github.com/ben-manes/caffeine
    local {

      # Maximum size of the cache.
      # An upper bound on the size of the cache in bytes. Because the size of each cache entry is
      # approximate, it is possible for the actual memory utilization of a maximum capacity cache to
      # differ slightly from this threshold depending on the underlying JVM.
      capacity = 20 MB

      # Eviction duration.
      # The duration after which an unused cache entry is automatically evicted. Cache entries are
      # evicted using the Window TinyLfu policy, which has been shown to produce near optimal hit
      # rates. https://github.com/ben-manes/caffeine/wiki/Efficiency
      expiration = 300 s

    }

    # Redis. https://github.com/antirez/redis
    redis {

      # Hostname.
      host = "localhost"

      # Port number. [0, 65535]
      port = 6379

    }

  }

  databases {

    # SortedMap. http://www.scala-lang.org/api/2.12.1/scala/collection/mutable/SortedMap.html
    local {

    }

    # SQL. https://en.wikipedia.org/wiki/SQL
    sql {

      # Username.
      #
      username = "root"

      # Password.
      #
      password = ""

      # SQL dialect. "mysql", "postgresql"
      # The name of SQL dialect to use.
      dialect = "mysql"

      # JDBC connection url. jdbc:${driver}://${host}:${port}/${database}?${options}
      #
      url = "jdbc:mysql://localhost:3306/test?serverTimezone=UTC"

    }

  }

}